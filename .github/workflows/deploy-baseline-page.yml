name: Deploy Baseline Comparison Pages
on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });

            const matchArtifact = artifacts.data.artifacts.find(artifact =>
              artifact.name.startsWith('pr-'));

            if (!matchArtifact) {
              core.setFailed('No PR artifact found');
              return;
            }

            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip'
            });

            const fs = require('fs');
            fs.writeFileSync('artifact.zip', Buffer.from(download.data));

            // Extract PR number for later use
            const prNumber = matchArtifact.name.split('-')[1];
            core.exportVariable('PR_NUMBER', prNumber);

      - name: Unzip artifact
        run: |
          mkdir -p pages
          unzip artifact.zip -d pages

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment on PR with deployed URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = process.env.PR_NUMBER;
            if (!prNumber) return;

            github.rest.issues.createComment({
              issue_number: parseInt(prNumber),
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Pages deployment complete! View at: ${{ steps.deployment.outputs.page_url }}`
            });
